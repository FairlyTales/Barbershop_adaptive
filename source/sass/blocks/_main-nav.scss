@use 'global/variables' as vars;
@use 'global/mixin' as mixins;

.main-nav {
  position: relative;
  width: 320px;
  min-height: 51px;
  margin: 0 auto;

  background-color: #6a4d38;
}

.main-nav__wrapper {
}

.main-nav__list {
}

.main-nav__list--site {
}

.main-nav__list--user {
}

// styles only for mobile version, they won't be translated further. We do this specifically for styling open/close navigation menu in mobile version because tablet & desktop version have their nav menus opened all the time and it will be huge pain in the ass undoing all these open/close styles if they cascade to the tablet & desktop versions from mobile version. Much easier to make these styles stay within mobile version.
@media (max-width: vars.$mobile-width-only) {
  // open/close button, not a cross (close) icon or hamburger (open) icon, they are specified by other selectors
  .main-nav__toggle {
    position: absolute;
    top: 0;
    right: 0;
    z-index: 2;

    display: block;
    width: 70px;
    height: 50px;

    cursor: pointer;

    background-color: #6a4d38;
    border: 0;

    &:hover,
    &:active {
      background-color: #624530;
      border: 0;
    }
  }

  // hamburger ("open navigation menu") icon. We show it only when main-nav also has a main-nav--closed class (we add/remove it with JS). The 3 hamburger lines are drawn in pure css as a simple line with two white shadows
  .main-nav--closed .main-nav__toggle::before {
    position: absolute;
    top: 15px;
    left: 17px;

    width: 36px;
    height: 2px;

    content: '';

    background-color: #fff;
    box-shadow: 0 8px 0 0 #fff, 0 16px 0 0 #fff;
  }

  // active state of the hamburger icon
  .main-nav--closed .main-nav__toggle:active::before {
    background-color: rgba(255, 255, 255, 0.3);
    box-shadow: 0 8px 0 0 rgba(255, 255, 255, 0.3),
      0 16px 0 0 rgba(255, 255, 255, 0.3);
  }

  // when main-nav also has class main-nav--opened (when the navigation menu is opened) we change the button position according to the template
  .main-nav--opened .main-nav__toggle {
    top: 0;
    left: 0;
  }

  // cross's (close navigation menu icon) first line (there are 2 of them because cross sign has 2 lines). We show it only when main-nav also has a main-nav--opened class (we add/remove it with JS).
  .main-nav--opened .main-nav__toggle::before {
    position: absolute;
    top: 24px;
    left: 18px;

    width: 36px;
    height: 2px;

    content: '';

    background-color: #fff;
    transform: rotate(45deg);
  }

  // "close navigation menu" cross's second line.
  .main-nav--opened .main-nav__toggle::after {
    position: absolute;
    top: 24px;
    left: 18px;

    width: 36px;
    height: 2px;

    content: '';

    background-color: #fff;
    transform: rotate(-45deg);
  }

  // active state of the "close navigation menu" icon. Here we change only the color of the cross, background color of the button is changed by the main-nav__toggle class
  .main-nav--opened .main-nav__toggle:active::before,
  .main-nav--opened .main-nav__toggle:active::after {
    background-color: rgba(255, 255, 255, 0.3);
  }
  // hide site-list__item if class main-nav--closed applied to the main-nav
  .main-nav--closed .site-list__item {
    display: none;

    // show the site-list__item--active (currently opened page)
    &--current-page {
      display: block;
      text-align: center;
    }
  }

  // hide user-list__item if class main-nav--closed applied to the main-nav
  .main-nav--closed .user-list__item {
    display: none;
  }

  // show nav menu if the main-nav--opened applied to the main-nav. We use  position: absolute and z-index to make it fly over the page
  .main-nav--opened .main-nav__wrapper {
    position: absolute;
    top: 0;
    right: 0;
    left: 70px;
    z-index: 10;

    background-color: #6a4d38;

    // shadow on the left side of the nav menu
    &::before {
      position: absolute;
      top: 0;
      left: 0;
      z-index: 2;

      width: 7px;
      height: 100%;

      content: '';

      box-shadow: inset 4px 0 7px -2px rgba(0, 0, 0, 0.4);
    }
  }
  //* fallback for the case where user got HTML and CSS, but didn't get JS. This fallback makes shure that the navigation menu is constantly openned. If the JS was donwloaded it will remove class "main-nav--no-js" from the DOM and everything will work according to "Plan A"
  // hide the open/close button (no need for it in this case)
  .main-nav--no-js .main-nav__toggle {
    display: none;
  }

  // show site-list
  .main-nav--no-js .site-list__item {
    display: block;
  }

  // move site-list__item--active to the left, like other list items
  .main-nav--no-js .site-list__item--active {
    padding-right: 21px;
    padding-left: 21px;
  }

  // show user-list
  .main-nav--no-js .user-list__item {
    display: block;
  }
}

@media (min-width: vars.$tablet-width) {
  .main-nav {
    width: auto;
    background-color: #000;
  }

  .main-nav__wrapper {
    display: flex;
    justify-content: space-between;
    max-width: 880px;
    margin: 0 auto;
  }

  // hide open/close button
  .main-nav__toggle {
    display: none;
  }
}

@media (min-width: vars.$desktop-width) {
  .main-nav__wrapper {
    width: 960px;
    max-width: none;
  }
}
